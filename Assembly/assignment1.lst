     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0700                        a dw 7
    15 00000002 02                          b db 2
    16 00000003 03                          d db 3
    17                                  
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:bits 32 ; assembling for the 32 bits architecture
    21                                  
    22                                          ; ...
    23 00000000 B804000000                      mov eax,4;
    24 00000005 8B1D[02000000]                  mov ebx,[b];
    25 0000000B 29D8                            sub eax,ebx
    26 0000000D B905000000                      mov ecx,5
    27 00000012 8B15[03000000]                  mov edx,[d]
    28 00000018 29D1                            sub ecx,edx
    29 0000001A 01C8                            add eax,ecx
    30 0000001C 8B15[00000000]                  mov edx,[a]
    31 00000022 01D0                            add eax,edx
    32                                          
    33                                      
    34                                          ; exit(0)
    35 00000024 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000026 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
